{"version":3,"names":["DEFAULT_CONFIG","namespace","serverHost","LNC","constructor","lncConfig","keyHex","log","debug","credentials","localKey","remoteKey","config","Object","assign","_namespace","credentialStore","LncCredentialStore","pairingPhrase","isPaired","lnd","LndApi","createRpc","loop","LoopApi","pool","PoolApi","faraday","FaradayApi","lit","LitApi","NativeModules","LncModule","initLNC","isConnected","status","expiry","Date","isReadOnly","hasPerms","permission","connect","connected","registerLocalPrivCreateCallback","onLocalPrivCreate","registerRemoteKeyReceiveCallback","onRemoteKeyReceive","registerAuthDataCallback","onAuthData","error","connectServer","disconnect","request","method","Promise","resolve","reject","reqJSON","JSON","stringify","invokeRPC","response","rawRes","parse","res","snakeKeysToCamel","Error","subscribe","initListener"],"sources":["lnc.ts"],"sourcesContent":["import { NativeModules } from 'react-native';\nimport {\n    FaradayApi,\n    LitApi,\n    LndApi,\n    LoopApi,\n    PoolApi,\n    snakeKeysToCamel\n} from '@lightninglabs/lnc-core';\nimport { createRpc } from './api/createRpc';\nimport { CredentialStore, LncConfig } from './types/lnc';\nimport LncCredentialStore from './util/credentialStore';\nimport { log } from './util/log';\n\n/** The default values for the LncConfig options */\nconst DEFAULT_CONFIG = {\n    namespace: 'default',\n    serverHost: 'mailbox.terminal.lightning.today:443'\n} as Required<LncConfig>;\n\nexport default class LNC {\n    _namespace: string;\n    credentials: CredentialStore;\n\n    lnd: LndApi;\n    loop: LoopApi;\n    pool: PoolApi;\n    faraday: FaradayApi;\n    lit: LitApi;\n\n    constructor(lncConfig?: LncConfig) {\n        // merge the passed in config with the defaults\n        const config = Object.assign({}, DEFAULT_CONFIG, lncConfig);\n\n        this._namespace = config.namespace;\n\n        if (config.credentialStore) {\n            this.credentials = config.credentialStore;\n        } else {\n            this.credentials = new LncCredentialStore(config.pairingPhrase);\n            // don't overwrite an existing serverHost if we're already paired\n            if (!this.credentials.isPaired)\n                this.credentials.serverHost = config.serverHost;\n            if (config.pairingPhrase)\n                this.credentials.pairingPhrase = config.pairingPhrase;\n        }\n\n        this.lnd = new LndApi(createRpc, this);\n        this.loop = new LoopApi(createRpc, this);\n        this.pool = new PoolApi(createRpc, this);\n        this.faraday = new FaradayApi(createRpc, this);\n        this.lit = new LitApi(createRpc, this);\n\n        NativeModules.LncModule.initLNC(this._namespace);\n    }\n\n    onLocalPrivCreate = (keyHex: string) => {\n        log.debug('local private key created: ' + keyHex);\n        this.credentials.localKey = keyHex;\n    };\n\n    onRemoteKeyReceive = (keyHex: string) => {\n        log.debug('remote key received: ' + keyHex);\n        this.credentials.remoteKey = keyHex;\n    };\n\n    onAuthData = (keyHex: string) => {\n        log.debug('auth data received: ' + keyHex);\n    };\n\n    async isConnected() {\n        return await NativeModules.LncModule.isConnected(this._namespace);\n    }\n\n    async status() {\n        return await NativeModules.LncModule.status(this._namespace);\n    }\n\n    async expiry() {\n        const expiry = await NativeModules.LncModule.expiry(this._namespace);\n        return new Date(expiry * 1000);\n    }\n\n    async isReadOnly() {\n        return await NativeModules.LncModule.isReadOnly(this._namespace);\n    }\n\n    async hasPerms(permission: string) {\n        return await NativeModules.LncModule.hasPerms(\n            this._namespace,\n            permission\n        );\n    }\n\n    /**\n     * Connects to the LNC proxy server\n     * @returns a promise that resolves when the connection is established\n     */\n    async connect() {\n        // do not attempt to connect multiple times\n        const connected = await this.isConnected();\n        if (connected) return;\n\n        NativeModules.LncModule.registerLocalPrivCreateCallback(\n            this._namespace,\n            this.onLocalPrivCreate\n        );\n        NativeModules.LncModule.registerRemoteKeyReceiveCallback(\n            this._namespace,\n            this.onRemoteKeyReceive\n        );\n        NativeModules.LncModule.registerAuthDataCallback(\n            this._namespace,\n            this.onAuthData\n        );\n\n        const { pairingPhrase, localKey, remoteKey, serverHost } =\n            this.credentials;\n\n        // connect to the server\n        const error = await NativeModules.LncModule.connectServer(\n            this._namespace,\n            serverHost,\n            false,\n            pairingPhrase,\n            localKey,\n            remoteKey\n        );\n\n        return error;\n    }\n\n    /**\n     * Disconnects from the proxy server\n     */\n    disconnect() {\n        NativeModules.LncModule.disconnect(this._namespace);\n    }\n\n    /**\n     * Emulates a GRPC request but uses the mobile client instead to communicate with the LND node\n     * @param method the GRPC method to call on the service\n     * @param request The GRPC request message to send\n     */\n    request<TRes>(method: string, request?: object): Promise<TRes> {\n        return new Promise((resolve, reject) => {\n            log.debug(`${method} request`, request);\n            const reqJSON = JSON.stringify(request || {});\n            NativeModules.LncModule.invokeRPC(\n                this._namespace,\n                method,\n                reqJSON,\n                (response: string) => {\n                    try {\n                        const rawRes = JSON.parse(response);\n                        const res = snakeKeysToCamel(rawRes);\n                        log.debug(`${method} response`, res);\n                        resolve(res as TRes);\n                    } catch (error) {\n                        log.debug(`${method} raw response`, response);\n                        reject(new Error(response));\n                        return;\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * Subscribes to a GRPC server-streaming endpoint and executes the `onMessage` handler\n     * when a new message is received from the server\n     * @param method the GRPC method to call on the service\n     * @param request the GRPC request message to send\n     * @param onMessage the callback function to execute when a new message is received\n     * @param onError the callback function to execute when an error is received\n     */\n    subscribe(method: string, request?: object): string {\n        log.debug(`${method} request`, request);\n        const reqJSON = JSON.stringify(request || {});\n        NativeModules.LncModule.initListener(this._namespace, method, reqJSON);\n        return method;\n    }\n}\n"],"mappings":"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"}